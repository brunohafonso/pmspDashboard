// <auto-generated />
using bruno.pmsp.repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace bruno.pmsp.repository.Migrations
{
    [DbContext(typeof(PmspContext))]
    [Migration("20180505230441_BancoInicial")]
    partial class BancoInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("bruno.pmsp.domain.Entities.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AtualizadoEm");

                    b.Property<string>("AtualizadoPor");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Complemento")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CriadoEm");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("IdServidor");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Numero");

                    b.Property<int>("QtdAtualizacoes");

                    b.HasKey("Id");

                    b.HasIndex("IdServidor")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("bruno.pmsp.domain.Entities.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AtualizadoEm");

                    b.Property<string>("AtualizadoPor");

                    b.Property<string>("CredenciaisAcesso")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CriadoEm");

                    b.Property<int>("QtdAtualizacoes");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("CredenciaisAcesso")
                        .IsUnique();

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("bruno.pmsp.domain.Entities.Servidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AtualizadoEm");

                    b.Property<string>("AtualizadoPor");

                    b.Property<DateTime>("CriadoEm");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("IdLogin");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("PreferenciaContato")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("QtdAtualizacoes");

                    b.Property<string>("RF")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("IdLogin")
                        .IsUnique();

                    b.HasIndex("RF")
                        .IsUnique();

                    b.ToTable("Servidores");
                });

            modelBuilder.Entity("bruno.pmsp.domain.Entities.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AtualizadoEm");

                    b.Property<string>("AtualizadoPor");

                    b.Property<string>("Celular")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CriadoEm");

                    b.Property<int>("IdServidor");

                    b.Property<string>("OutroTelefone")
                        .HasMaxLength(50);

                    b.Property<int>("QtdAtualizacoes");

                    b.Property<string>("Recado")
                        .HasMaxLength(50);

                    b.Property<string>("TelefoneResidencial")
                        .HasMaxLength(50);

                    b.Property<string>("WhatsApp")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("IdServidor")
                        .IsUnique();

                    b.ToTable("Telefones");
                });

            modelBuilder.Entity("bruno.pmsp.domain.Entities.Vinculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AtualizadoEm");

                    b.Property<string>("AtualizadoPor");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CriadoEm");

                    b.Property<string>("DRE")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("DataInicioVinculo");

                    b.Property<int>("IdServidor");

                    b.Property<string>("Jornada")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("QtdAtualizacoes");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("StatusVinculo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UnidadeExercicio")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UnidadeLotacao")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Vinc");

                    b.HasKey("Id");

                    b.HasIndex("IdServidor");

                    b.ToTable("Vinculos");
                });

            modelBuilder.Entity("bruno.pmsp.domain.Entities.Endereco", b =>
                {
                    b.HasOne("bruno.pmsp.domain.Entities.Servidor", "Servidor")
                        .WithOne("Endereco")
                        .HasForeignKey("bruno.pmsp.domain.Entities.Endereco", "IdServidor")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("bruno.pmsp.domain.Entities.Servidor", b =>
                {
                    b.HasOne("bruno.pmsp.domain.Entities.Login", "Login")
                        .WithOne("Servidor")
                        .HasForeignKey("bruno.pmsp.domain.Entities.Servidor", "IdLogin")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("bruno.pmsp.domain.Entities.Telefone", b =>
                {
                    b.HasOne("bruno.pmsp.domain.Entities.Servidor", "Servidor")
                        .WithOne("Telefones")
                        .HasForeignKey("bruno.pmsp.domain.Entities.Telefone", "IdServidor")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("bruno.pmsp.domain.Entities.Vinculo", b =>
                {
                    b.HasOne("bruno.pmsp.domain.Entities.Servidor", "Servidor")
                        .WithMany("Vinculos")
                        .HasForeignKey("IdServidor")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
